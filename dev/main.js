/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("document.addEventListener('DOMContentLoaded', function () {\n  init();\n});\nvar responseContainer = document.querySelector('.response .row__container');\nvar overlay = document.querySelector('.overlay');\nvar gitToken = 'aa3c782edd67469e3487c94562a7f5374b75816f';\n\nfunction init() {\n  addEvents();\n}\n\nfunction addEvents() {\n  var submit = document.querySelector('input[type=submit]');\n  var input = document.querySelector('input[type=text]');\n\n  function showInfo() {\n    var promise = new Promise(function (resolve, reject) {});\n    promise.then(overlay.classList.add('show')).then(removeInfo()).then(showUserInfo()).then(showRepoList()).then(overlay.classList.remove('show'));\n  }\n\n  input.addEventListener('keydown', function (e) {\n    if (e.keyCode == 13) {\n      showInfo();\n    }\n  });\n  submit.addEventListener('click', function (e) {\n    e.preventDefault();\n    showInfo();\n  });\n}\n\nfunction xhrInit(type) {\n  var accessToken = \"?access_token=\".concat(gitToken);\n  var userName = document.querySelector('input[type=text]').value;\n  userName = userName.replace(' ', '');\n  var requestURL = 'https://api.github.com/users/';\n  requestURL = requestURL + userName;\n  if (type == 'repos') requestURL = requestURL + '/repos';\n  var requestType = 'json';\n  var requestMethod = 'GET';\n  var xhr = new XMLHttpRequest();\n  xhr.responseType = requestType;\n  xhr.open(requestMethod, requestURL + accessToken);\n  xhr.send();\n  return xhr;\n}\n\nfunction showUserInfo() {\n  var request = xhrInit();\n\n  request.onprogress = function () {\n    document.querySelector('input[type=text]').setAttribute('class', '');\n  };\n\n  request.onload = function () {\n    if (request.status >= 200 && request.status < 300) {\n      var name = request.response['name'] ? request.response['name'] : request.response['login'];\n      responseContainer.appendChild(generateIcon(request.response['avatar_url']));\n      responseContainer.appendChild(generateUserInfo(name, request.response['html_url']));\n      document.querySelector('input[type=text]').classList.add('success');\n    } else {\n      var msg = document.createElement('div');\n      msg.classList.add('error', 'col_12');\n      msg.innerText = 'User not found';\n      responseContainer.appendChild(msg);\n      document.querySelector('input[type=text]').classList.add('error');\n      console.log('Some error with status ' + request.status + '. Message: \"' + request.response.message + '\"');\n    }\n  };\n}\n\nfunction generateIcon(icon) {\n  var iconHtml = document.createElement('div');\n  iconHtml.classList.add('user-icon', 'col_3', 'col-sm_2');\n  var iconImg = document.createElement('img');\n  iconImg.src = icon;\n  iconHtml.appendChild(iconImg);\n  return iconHtml;\n}\n\nfunction generateUserInfo(name, link) {\n  var userInfoHtml = document.createElement('div');\n  userInfoHtml.classList.add('user-information', 'col_9', 'col-sm_10');\n  var userNameHtml = document.createElement('div');\n  userNameHtml.classList.add('user-information__name');\n  userNameHtml.innerText = name;\n  var userLinkHtml = document.createElement('div');\n  userLinkHtml.classList.add('user-information__link');\n  userInfoLinkToGit = document.createElement('a');\n  userInfoLinkToGit.setAttribute('href', link);\n  userInfoLinkToGit.setAttribute('target', '_blank');\n  userInfoLinkToGit.innerHTML = '<i class=\"fas fa-external-link-alt\"></i>';\n  userLinkHtml.appendChild(userInfoLinkToGit);\n  userInfoHtml.appendChild(userNameHtml);\n  userInfoHtml.appendChild(userLinkHtml);\n  return userInfoHtml;\n}\n\nfunction showRepoList() {\n  var request = xhrInit('repos');\n\n  request.onload = function () {\n    if (request.status >= 200 && request.status < 300) {\n      setTimeout(function () {\n        if (generateLangFilter(request.response)) responseContainer.appendChild(generateLangFilter(request.response));\n        responseContainer.appendChild(generateRepoList(request.response));\n        var select = document.querySelector('select');\n        select.addEventListener('change', function () {\n          filterRepo();\n        });\n      }, 100);\n    } else {\n      console.log('Some error with status ' + request.status + '. Message: \"' + request.response.message + '\"');\n    }\n  };\n}\n\nfunction generateLangFilter(obj) {\n  var languages = new Set();\n\n  for (key in obj) {\n    if (obj[key]['language']) {\n      languages.add(obj[key]['language']);\n    }\n  }\n\n  if (languages.size <= 1) {\n    return;\n  }\n\n  var filterWrapper = document.createElement('div');\n  filterWrapper.classList.add('filter', 'col_12');\n  filterWrapper.innerText = 'Language filter:';\n  var deleteFilterEl = document.createElement('span');\n  deleteFilterEl.id = 'delFilter';\n  deleteFilterEl.innerHTML = '<i class=\"fas fa-times\"></i>unset filter';\n  deleteFilterEl.addEventListener('click', function () {\n    document.querySelector('select').value = 'all';\n    filterRepo();\n    this.style.display = 'none';\n  });\n  var filter = document.createElement('select');\n  filter.setAttribute('name', 'languages');\n  var filterfirstItem = document.createElement('option');\n  filterfirstItem.setAttribute('value', 'all');\n  filterfirstItem.innerText = 'All languages';\n  filter.appendChild(filterfirstItem);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = languages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var language = _step.value;\n      var filterItem = document.createElement('option');\n      filterItem.setAttribute('value', language);\n      filterItem.innerText = language;\n      filter.appendChild(filterItem);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  filterWrapper.appendChild(filter);\n  filterWrapper.appendChild(deleteFilterEl);\n  return filterWrapper;\n}\n\nfunction filterRepo() {\n  var filterValue = document.querySelector('select').value;\n  var deleteFilterEl = document.querySelector('#delFilter');\n  var repos = document.querySelectorAll('.repo-list__item');\n\n  if (filterValue == 'all') {\n    for (var _i = 0; _i < repos.length; _i++) {\n      repos[_i].style.display = \"\";\n    }\n\n    deleteFilterEl.style.display = 'none';\n    return;\n  }\n\n  var showedRepos = document.querySelectorAll('[data-lang=\"' + filterValue + '\"]');\n\n  for (var _i2 = 0; _i2 < repos.length; _i2++) {\n    repos[_i2].style.display = \"none\";\n  }\n\n  for (var _i3 = 0; _i3 < showedRepos.length; _i3++) {\n    showedRepos[_i3].style['display'] = \"\";\n  }\n\n  deleteFilterEl.style.display = 'inline';\n}\n\nfunction generateRepoList(obj) {\n  var repoHtml = document.createElement('div');\n  repoHtml.classList.add('repo-list', 'col_12');\n  var showedProperty = new Map([['Main language', 'language'], ['Create date', ''], ['Last update', '']]);\n\n  if (obj.length == 0) {\n    repoHtml.classList.add('warning');\n    repoHtml.innerText = \"Repos not found\";\n    return repoHtml;\n  }\n\n  var _loop = function _loop() {\n    var repo = document.createElement('div');\n    var createDate = new Date(obj[i].created_at);\n    var updateDate = new Date(obj[i].updated_at);\n    repo.classList.add('repo-list__item', 'col_12', 'col-sm_6');\n    repo.dataset.lang = obj[i].language;\n    repo.innerHTML = \"<div class=\\\"repo-list__item-top\\\">\\n                      <div class=\\\"repo-list__item-name\\\">\".concat(obj[i].name, \"</div>\\n                      <a class=\\\"btn btn-grey\\\" href=\\\"\").concat(obj[i].html_url, \"\\\" target=\\\"_blank\\\">show</a>\\n                    </div>\");\n    showedProperty.forEach(function (value, key) {\n      var propertyValue = obj[i][value] !== null ? obj[i][value] : 'unknow';\n      if (key == 'Create date') propertyValue = createDate.toLocaleDateString();\n      if (key == 'Last update') propertyValue = updateDate.toLocaleDateString();\n      repo.innerHTML += \"<div class=\\\"repo-list__item-bottom\\\">\\n                        <div class=\\\"repo-list__item-name\\\">\".concat(key, \"</div>\\n                        <div class=\\\"repo-list__item-value\\\">\").concat(propertyValue, \"</div>\\n                       </div>\");\n    });\n    repoHtml.appendChild(repo);\n  };\n\n  for (i = 0; i < obj.length; i++) {\n    _loop();\n  }\n\n  return repoHtml;\n}\n\nfunction removeInfo() {\n  while (responseContainer.firstChild) {\n    responseContainer.removeChild(responseContainer.firstChild);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/main.js\n");

/***/ }),

/***/ "./src/scss/base.scss":
/*!****************************!*\
  !*** ./src/scss/base.scss ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"base.css\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9iYXNlLnNjc3M/ZjNjZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6Ii4vc3JjL3Njc3MvYmFzZS5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYmFzZS5jc3NcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scss/base.scss\n");

/***/ }),

/***/ 0:
/*!***************************************************!*\
  !*** multi ./src/js/main.js ./src/scss/base.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./src/js/main.js */"./src/js/main.js");
module.exports = __webpack_require__(/*! ./src/scss/base.scss */"./src/scss/base.scss");


/***/ })

/******/ });